Documentation sections:

* Scalable: Redis here is used as a shared storage layer (I haven't used it before!), thus Kubernetes can scale up/down pods (SCALABLE) without
losing track of running workflows.
I haven't configured persistant storage with Redis - but the idea is what's important: storing information
without relying on local memory of a pod/container.


* Stateless: Each pod/container can read/write task statuses to Redis without relying on local memory, thus achieving stateless manner.

* No input validation checks implemented for the time being.

* I would abstract the persistant storage layer away, so that Redis can be replaced with any other implemenation
seamlessly.

-------
Questions for Baruch:

I used the "redis:alpine" image on my Windows machine, and used it as Redis.
All prerequisites are defined in the Readme file, or, you can simply install them: pip install -r requirements.txt

And run as requested: uvicorn main:app --reload

